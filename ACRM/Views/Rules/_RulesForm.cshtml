@model ACRM.Models.CorsRuleModel

<div class="summary">
    @Html.ValidationSummary()
    @Model.ExceptionMessage
</div>

<div id="allowed-origins-holder" class="outer-holder">
    <strong>
        @Html.Label("Allowed Origins")
        <button class="add-button" type="button" data-camel-prefix="AllowedOrigins" data-dash-prefix="allowed-origins">+</button>
    </strong>
    @for (var i = 0; i < Model.AllowedOrigins.Count; i++)
    {
        <div id="allowed-origins-inner-holder-@i" class="allowed-origins-inner-holder inner-holder">
            @Html.TextBoxFor(m => m.AllowedOrigins[i], new { @class = "allowed-origins-box" }) 
            <button class="remove-button secondary" type="button" data-index="@i" data-camel-prefix="AllowedOrigins" data-dash-prefix="allowed-origins">-</button>
        </div>
    }
</div>
<div class="example">Examples: http://www.somedomain.com, http://test.local, *</div>

<div id="allowed-methods-holder" class="outer-holder">
    <strong>
        @Html.Label("Allowed Methods")
        <button class="add-button" type="button" data-camel-prefix="AllowedMethods" data-dash-prefix="allowed-methods">+</button>
    </strong>
    @for (var i = 0; i < Model.AllowedMethods.Count; i++)
    {
        <div id="allowed-methods-inner-holder-@i" class="allowed-methods-inner-holder inner-holder">
            @Html.TextBoxFor(m => m.AllowedMethods[i], new { @class = "allowed-methods-box" }) 
            <button class="remove-button secondary" type="button" data-index="@i" data-camel-prefix="AllowedMethods" data-dash-prefix="allowed-methods">-</button>
        </div>
    }
</div>
<div class="example">Examples: Get, Post, Put, Delete, List</div>

<div id="allowed-headers-holder" class="outer-holder">
    <strong>
        @Html.Label("Allowed Headers")
        <button class="add-button" type="button" data-camel-prefix="AllowedHeaders" data-dash-prefix="allowed-headers">+</button>
    </strong>
    @for (var i = 0; i < Model.AllowedHeaders.Count; i++)
    {
        <div id="allowed-headers-inner-holder-@i" class="allowed-headers-inner-holder inner-holder">
            @Html.TextBoxFor(m => m.AllowedHeaders[i], new { @class = "allowed-headers-box" })
            <button class="remove-button secondary" type="button" data-index="@i" data-camel-prefix="AllowedHeaders" data-dash-prefix="allowed-headers">-</button>
        </div>    
    }
</div>
<div class="example">Examples: x-ms-meta-data, x-ms-meta-target, x-ms-*</div>

<div id="exposed-headers-holder" class="outer-holder">
    <strong>
        @Html.Label("Exposed Headers")
        <button class="add-button" type="button" data-camel-prefix="ExposedHeaders" data-dash-prefix="exposed-headers">+</button>
    </strong>
    @for (var i = 0; i < Model.ExposedHeaders.Count; i++)
    {
        <div id="exposed-headers-inner-holder-@i" class="exposed-headers-inner-holder inner-holder">
            @Html.TextBoxFor(m => m.ExposedHeaders[i], new { @class = "exposed-headers-box" })
            <button class="remove-button secondary" type="button" data-index="@i" data-camel-prefix="ExposedHeaders" data-dash-prefix="exposed-headers">-</button>
        </div>
    }
</div>
<div class="example">Examples: x-ms-meta, x-ms-*</div>

<div>
    <strong>@Html.LabelFor(m => m.MaxAgeInSeconds)</strong>
    <div>@Html.EditorFor(m => m.MaxAgeInSeconds)</div>
    <div class="example">Examples: 3600</div>
</div>